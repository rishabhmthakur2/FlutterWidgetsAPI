[
    {
        "id": 0,
        "name": "Appbar",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart';\n import 'package:rapid_widgets_library/custom-appBar.dart';",
        "call": "appBar:customAppBar(appBarIcons,paramobject),",
        "definitions": [
            "AppBarParameters paramobject = new AppBarParameters(",
            "elevation: ${elevation}, ",
            "bottomOpacity: 1.0, ",
            "toolbarOpacity: 1.0, ",
            "titleSpacing: 1.0, ",
            "centerTitle: true, ",
            "automaticallyImplyLeading: true, ",
            "title: Text('{$title}')); ",
            "List<Widget> appBarIcons = [ ",
            "IconButton( ",
            "icon:  ",
            "Icon(Icons.search), ",
            "onPressed: () {}, ",
            "), ",
            "IconButton( ",
            "icon:  Icon(Icons.help), ",
            "onPressed: () {}, ",
            "), ",
            "IconButton( ",
            "icon:  Icon(Icons.verified_user), ",
            "onPressed: () {}, ",
            "), ];"
        ]
    },
    {
        "id": 1,
        "name": "Bottom Navigation Bar",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-bottomnavbar.dart';",
        "call": "bottomNavigationBar: BottomNavBar(param),",
        "definitions": [
            "List<BottomNavigationBarItem> bottomnavitems = []; ",
            "BottomNavigationBarItem bottomnavitem1= new BottomNavigationBarItem( ",
            "icon: Icon(Icons.home),",
            "title: Text('Home',style: TextStyle(fontSize: 12)),",
            "); ",
            "BottomNavigationBarItem bottomnavitem2= new BottomNavigationBarItem( ",
            "icon: Icon(Icons.phone),",
            "title: Text('Phone',style: TextStyle(fontSize: 12)),",
            "); ",
            "BottomNavigationBarItem bottomnavitem3= new BottomNavigationBarItem( ",
            "icon: Icon(Icons.map),",
            "title: Text('Map',style: TextStyle(fontSize: 12),),",
            "); ",
            "bottomnavitems.add(bottomnavitem1); ",
            "bottomnavitems.add(bottomnavitem2); ",
            "bottomnavitems.add(bottomnavitem3); ",
            "BottomNavBarParameters param = new BottomNavBarParameters(",
            "items: bottomnavitems, ",
            "selectedItemColor: Colors.red, ",
            "backgroundColor: Colors.black, ",
            "unselectedItemColor: Colors.grey, ",
            "showUnselectedLabels: true, ",
            "showSelectedLabels: true, ",
            "selectedIconTheme: IconThemeData(color: Colors.red));"
        ]
    },
    {
        "id": 2,
        "name": "Drawer",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-drawer.dart';",
        "call": "drawer: CustomDrawer(drawerList,onclickDrawer,user1),",
        "definitions": [
            "List<DrawerListItems> drawerList = [ ",
            "DrawerListItems(Icon(Icons.account_circle), ",
            "Text(\"Account details\")), ",
            "DrawerListItems(Icon(Icons.history), ",
            "Text(\"Order History\")), ",
            "DrawerListItems(Icon(Icons.account_balance_wallet), ",
            "Text(\"Wallet\")), ",
            "DrawerListItems(Icon(Icons.cancel), ",
            "Text(\"Logout\")), ",
            "]; ",
            "DrawerHeaderParameters user1= new DrawerHeaderParameters(",
            "subtitle: 'abc@xyz.com',",
            "title: 'Account Name',",
            "imageType: \"Network\",",
            "imagepath:'https://lunawood.com/wp-content/uploads/2018/02/placeholder-image.png' ,",
            "headerColor:Colors.white",
            "); ",
            "onclickDrawer(int nIndex) ",
            "{ ",
            "print(nIndex); ",
            "}"
        ]
    },
    {
        "id": 3,
        "name": "SliverAppbar",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-sliverAppBar.dart';",
        "call": "CustomScrollView( \nslivers: <Widget>[ \ncustomSliverAppBar(sliverProducts, params), \nSliverList( delegate: SliverChildListDelegate( \n<Widget>[ \nContainer(height: 1200.0), \n], \n), \n), \n], \n),",
        "definitions": [
            "SliverAppBarParameters params = new SliverAppBarParameters(",
            "automaticallyImplyLeading: true, ",
            "backgroundColor: Colors.black, ",
            "expandedHeight: 150, ",
            "elevation: 5, ",
            "titleSpacing: 20.0, ",
            "centerTitle: false, ",
            "stretch: true, ",
            "snap: false, ",
            "pinned: true, ",
            "floating: false, ",
            "title:Text('Sliver AppBar')",
            "); ",
            "List<Widget> sliverProducts = [ ",
            "IconButton( ",
            "icon:  Icon(Icons.search), ",
            "onPressed: () {}, ",
            "), ",
            "IconButton( ",
            "icon:  Icon(Icons.help), ",
            "onPressed: () {}, ",
            "), ",
            "IconButton( ",
            "icon:  Icon(Icons.verified_user), ",
            "onPressed: () {}, ",
            "), ",
            "];"
        ]
    },
    {
        "id": 4,
        "name": "Tab Bar",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-tab-bar.dart';",
        "call": "showTabBar(TabBarParameters(tablist: tabs),onTap),",
        "definitions": [
            "onTap(int s) { ",
            "print(s); ",
            "} ",
            "List<TabBarList> tabs = []; ",
            "TabBarList tab1 = new TabBarList( ",
            "\"menu\", ",
            "Icon(Icons.fastfood)",
            "); ",
            "TabBarList tab2 = new TabBarList( ",
            "\"cart\", ",
            "Icon(Icons.fastfood)",
            "); ",
            "tabs.add(tab1); ",
            "tabs.add(tab2);"
        ]
    },
    {
        "id": 5,
        "name": "TabBarView",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-tab-bar-view.dart';",
        "call": "showTabBarView(TabBarViewParameters(listTabs:tabviews),TabBarViewCallback),",
        "definitions": [
            "List<TabBarProducts> tabviews = []; ",
            "TabBarProducts tabview1= new TabBarProducts( ",
            "\"menu\",  ",
            "Icon(Icons.fastfood),",
            "Text(\"Hi\")",
            "); ",
            "TabBarProducts tabview2 = new TabBarProducts( ",
            "\"cart\", ",
            "Icon(Icons.shopping_cart),",
            "Text(\"Hell\")",
            "); ",
            "tabviews.add(tabview1); ",
            "tabviews.add(tabview2); ",
            "TabBarViewCallback(int tabprint) { ",
            "print(tabprint); ",
            "}"
        ]
    },
    {
        "id": 6,
        "name": "Vertical Tab Bar",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-VerticalTabs.dart';",
        "call": "VerticalTabs(tabsInfo: vtabs, verticalTabCallback: onClickCallback, params: paramobj,),",
        "definitions": [
            "onClickCallback(int nIndex, String sText) { ",
            "print(nIndex); ",
            "print(sText);",
            "} ",
            "CustomVerticalTabParameters paramobj = new CustomVerticalTabParameters( ",
            "itemExtent: 150, ",
            "tabsWidth: 100, ",
            "selectedTabBackgroundColor: Colors.red, ",
            "unselectedTabBackgroundColor: Colors.grey, ",
            "dividerColor:Colors.black, ",
            "tabsShadowColor:Colors.black, ",
            "tabsElevation: 10, ",
            "indicatorColor: Colors.black54, ",
            "changePageDuration: Duration(seconds: 2), ",
            "changePageCurve: Curves.easeInOut, ",
            "iconColor: Colors.white",
            "); ",
            "List<VTabBarProducts> vtabs = []; ",
            "VTabBarProducts vtab1 = new VTabBarProducts(",
            " \"Text1\" , ",
            "Icons.credit_card, ",
            "Container( ",
            "child: Text(\"tab1\"), ",
            ") ",
            "); ",
            "VTabBarProducts vtab2 = new VTabBarProducts(",
            " \"Text2\" , ",
            "Icons.credit_card, ",
            "Container( ",
            "child: Text(\"tabb2\"), ",
            ") ",
            "); ",
            "vtabs.add(vtab1); ",
            "vtabs.add(vtab2);"
        ]
    },
    {
        "id": 7,
        "name": "Button Bar",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-button-bar.dart';",
        "call": "primaryButtons(ButtonBarParameters(list: buttons),onPressed, onLongPressed), \nsecondaryButtons(ButtonBarParameters(list: buttons),onPressed, onLongPressed), \ntertiaryButtons(ButtonBarParameters(list: buttons),onPressed, onLongPressed),",
        "definitions": [
            "onPressed(bool s) { ",
            "print(s); ",
            "} ",
            "onLongPressed(bool s) { ",
            "print (s); ",
            "} ",
            "List<ButtonBarList> buttons = []; ",
            "ButtonBarList button1 = new ButtonBarList( ",
            "\"okay\", ",
            "Icon(Icons.favorite)",
            "); ",
            "ButtonBarList button2 = new ButtonBarList( ",
            "\"cancel\", ",
            "Icon(Icons.arrow_back)",
            "); ",
            "buttons.add(button1); ",
            "buttons.add(button2);"
        ]
    },
    {
        "id": 8,
        "name": "DropdownButton",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-dropdownButton.dart';",
        "call": "CustomDropdownButton(dropdownObject,onSelect),",
        "definitions": [
            "DropDownParameters dropdownObject = DropDownParameters(",
            "itemsList: [",
            "'Bangalore',",
            "'Delhi',",
            "],",
            "hintText: 'Select City',",
            "listType: 'Text',",
            "fillColor: Colors.orange,",
            "borderRadius: 10,",
            "width: 200,",
            "textColor: Colors.black,",
            "itemsBgColor: Colors.yellow,",
            "shadowColor: Colors.black,",
            "shadowBlurRadius: 5,",
            "shadowSpreadRadius: 2",
            "); ",
            "onSelect(int i,String s){ ",
            "print(i); ",
            "print(s); ",
            "}"
        ]
    },
    {
        "id": 9,
        "name": "FlatButton",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-flatButton.dart';",
        "call": "customFlatButton(buttonFlatObject, onFlatButtonPress, onFlatButtonLongPress),",
        "definitions": [
            "onFlatButtonPress(bool b){ ",
            "print(b); ",
            "} ",
            "onFlatButtonLongPress(bool b){ ",
            "print(b); ",
            "} ",
            "FlatButtonParameters buttonFlatObject = FlatButtonParameters(",
            "child:Text('Submit'),",
            "color:Colors.pinkAccent,",
            "textColor:Colors.white,",
            "hoverColor: Colors.grey,",
            "width: 150,",
            "focusColor: Colors.grey,",
            "height: 50,",
            "highlightColor: Colors.grey,",
            "splashColor: Colors.white",
            ");"
        ]
    },
    {
        "id": 10,
        "name": "FloatingActionButton",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-floatingActionButton.dart';",
        "call": "customFloatingActionButton(btnFloatObject, onFloatButtonPress),",
        "definitions": [
            "onFloatButtonPress(bool b){ ",
            "print(b); ",
            "} ",
            "Floatingactionbuttonparam btnFloatObject = Floatingactionbuttonparam(",
            "child: Icon(Icons.call),",
            "foregroundColor: Colors.black,",
            "backgroundColor: Colors.yellow,",
            "mini: false,",
            "shape: CircleBorder(),",
            "hoverColor:Colors.orange",
            ");"
        ]
    },
    {
        "id": 11,
        "name": "IconButton",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-iconButton.dart';",
        "call": "customIconButton(iconButtonObject, onIconButtonPress),",
        "definitions": [
            "onIconButtonPress(bool b){ ",
            "print(b); ",
            "} ",
            "IconButtonParameters iconButtonObject = IconButtonParameters(",
            "icon: Icons.shopping_cart,",
            "color: Colors.orange,",
            "iconSize: 30,",
            "hoverColor: Colors.orange,",
            "splashColor: Colors.orange",
            ");"
        ]
    },
    {
        "id": 12,
        "name": "OutlineButton",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-outlineButton.dart';",
        "call": "customOutlineButton(outlineButtonObject, onOutlineButtonPress, onOutlineButtonLongPress),",
        "definitions": [
            "onOutlineButtonPress(bool b){ ",
            "print(b); ",
            "} ",
            "onOutlineButtonLongPress(bool b){ ",
            "print(b); ",
            "} ",
            "Outlinebuttonparam outlineButtonObject = Outlinebuttonparam(",
            "child: Text('Submit'),",
            "shape: RoundedRectangleBorder(borderRadius: new BorderRadius.circular(10)),",
            "textColor: Colors.black,",
            "borderColor: Colors.black,",
            "color: Colors.orange",
            ");"
        ]
    },
    {
        "id": 13,
        "name": "Slider",
        "imports": "import 'dart:core'; \nimport 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom_slider.dart';",
        "call": "CustomSlider(param: finalSliderObject, callbackSlider: onSlide),",
        "definitions": [
            "onSlide(double sdouble) { ",
            "print(sdouble); ",
            "} ",
            "SliderParameters finalSliderObject = new SliderParameters(",
            "inactiveColor: Colors.red, ",
            "label: \"Custom Slider\", ",
            "divisions: 3, ",
            "max: 30, ",
            "min: 0, ",
            "activeColor: Colors.pink",
            ");"
        ]
    },
    {
        "id": 14,
        "name": "Switch",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom_switch.dart';",
        "call": "CustomSwitch(param: finalSwitchObj, callbackSwitch: onSwitchTap),",
        "definitions": [
            "onSwitchTap(bool sBool) { ",
            "print(sBool); ",
            "} ",
            "SwitchParameters finalSwitchObj = new SwitchParameters(",
            "inactiveTrackColor: Color.fromRGBO(200, 0, 0, 0.5), ",
            "activeColor: Colors.redAccent, ",
            "activeTrackColor: Colors.orangeAccent",
            ");"
        ]
    },
    {
        "id": 15,
        "name": "Textfield",
        "imports": "import 'dart:ui'; \nimport 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-textField.dart';",
        "call": "CustomTextField(params: finalTextObj, callbackTextfield: onTextSubmit),",
        "definitions": [
            "onTextSubmit(String sText) { ",
            "print(sText); ",
            "} ",
            "TextFieldParameters finalTextObj = new TextFieldParameters( ",
            "maxLength: 10, ",
            "obsecureText: false, ",
            "maxLengthEnforced: true, ",
            "decoration: InputDecoration(",
            "hintText: 'Password',",
            "labelText: 'Password', ",
            "prefixIcon: Icon(Icons.lock), ",
            "filled: true, ",
            "fillColor: Colors.white, ",
            "counterText: \"\", ",
            "border: OutlineInputBorder( ",
            "borderRadius: BorderRadius.circular(50.0), ",
            "borderSide: BorderSide( color: Colors.black)), ",
            "), ",
            "cursorColor: Colors.black, ",
            "cursorWidth: 2, ",
            "expands: false, ",
            "maxLines: 1, ",
            "readOnly: false, ",
            "showCursor: true, ",
            "style: TextStyle(color: Colors.blue), ",
            ");"
        ]
    },
    {
        "id": 16,
        "name": "AlertDialog",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom_AlertDialogs.dart';",
        "call": "CustomAlertDialog(dialogContent: alertObj1, param: alertobj2, callbackAlert: onAlertButtonTap),",
        "definitions": [
            "AlertDialogContents alertObj1 = new AlertDialogContents( ",
            "<Widget>[ ",
            "FlatButton( ",
            "child: Text(\"Accept\",",
            "style: TextStyle(color: Colors.black),), ",
            "onPressed: (){}, ",
            "), ",
            "FlatButton( ",
            "child: Text(\"Cancel\",",
            "style: TextStyle(color: Colors.black),), ",
            "onPressed: (){}, ",
            "), ",
            "], \"Alert Dialog Box Content \", ",
            "Text(\"Alert Title\"), ",
            "); ",
            "AlertDialogParameters alertobj2 = new AlertDialogParameters(",
            "shape: RoundedRectangleBorder( ",
            "borderRadius: BorderRadius.circular(20.0)), ",
            "backgroundColor: Colors.red, ",
            "elevation: 30, ",
            "contentTextStyle: TextStyle( fontSize: 18.0, color: Colors.blueGrey), ",
            "height: 500, ",
            "width: 500, ",
            "titleTextStyle: TextStyle( fontSize: 18.0, color: Colors.white), ",
            "); ",
            "onAlertButtonTap(String s){ ",
            "print(s); ",
            "}"
        ]
    },
    {
        "id": 17,
        "name": "BottomSheet",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-bottomSheet.dart';",
        "call": "customBottomSheet(contents, bparam, onBottomTap),",
        "definitions": [
            "onBottomTap(int nIndex, String sText) { ",
            "print(nIndex); ",
            "print(sText); ",
            "} ",
            "List<BottomSheetContents> contents = []; ",
            "BottomSheetContents contObj1 = new BottomSheetContents( ",
            "IconButton( icon: Icon(Icons.share), ), ",
            "\"Share\"",
            "); ",
            "contents.add(contObj1); ",
            "BottomSheetParameters bparam = new BottomSheetParameters(",
            "elevation: 50.0, ",
            "shape: RoundedRectangleBorder( borderRadius: BorderRadius.circular(20.0)), ",
            "backgroundColor: Colors.amberAccent, ",
            "itemExtent: 100, ",
            "height: 300, ",
            "iconColor: Colors.blueGrey, ",
            "fontColor: Colors.brown, ",
            "contentSize: 30",
            ");"
        ]
    },
    {
        "id": 18,
        "name": "ExpansionPanel",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-expandablePanel.dart'; \nimport 'package:rapid_widgets_library/custom-materialChip.dart';",
        "call": "Container( \nchild: expansionPanelWidget(paneldata), \n),",
        "definitions": [
            "final List<ExpandablePanelData> paneldata = []; ",
            "MaterialChipData chipdata = new MaterialChipData(); ",
            "onclickCardBtn(int nIndex, sText) { ",
            "print(nIndex); ",
            "print(sText); ",
            "} ",
            "ExpandablePanelData paneldataone = new ExpandablePanelData(",
            "'Odisha', ",
            "Icon(Icons.location_city), ",
            "[ ",
            "CustomChipWidget( data: chipdata, callback: onclickCardBtn, ), ",
            "], ",
            "ThemeData(",
            "accentColor: Colors.orange,",
            "unselectedWidgetColor: Colors.green",
            "),",
            "); ",
            "ExpandablePanelData paneldatatwo = new ExpandablePanelData(",
            "'Maharashtra', ",
            "Icon(Icons.local_mall), ",
            "<Widget>[ ListTile( ",
            "leading: Image.network('https://lunawood.com/wp-content/uploads/2018/02/placeholder-image.png'), ",
            "title: Text('Test Title'), ",
            "subtitle: Text('Test Title'), ",
            "trailing: Image.network('https://lunawood.com/wp-content/uploads/2018/02/placeholder-image.png'), ",
            "),",
            "CustomChipWidget( ",
            "data: chipdata, ",
            "callback: onclickCardBtn, ",
            "), ",
            "], ",
            "ThemeData(",
            "accentColor: Colors.red,",
            "unselectedWidgetColor: Colors.red",
            ")",
            "); ",
            "paneldata.add(paneldataone); ",
            "paneldata.add(paneldatatwo);"
        ]
    },
    {
        "id": 19,
        "name": "Simple Dialog box",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-simple-dialog.dart';",
        "call": "FlatButton(\nchild:Text('Show Simple Dialog'),onPressed:(){showDialog( context: context, builder: (context) => simpleDialogWidget( SimpleDialogdata, context, onclickDialogBtn));},color: Colors.pink, ),",
        "definitions": [
            "onclickDialogBtn(int nIndex, String sText) { ",
            "print(nIndex); ",
            "print(sText); ",
            "} ",
            "final SimpleDialogData SimpleDialogdata = new SimpleDialogData(",
            "dialogButtonText: 'okay',",
            "btnTextColor: Colors.white,",
            "btnColor: Colors.pink,",
            "bodyTextColor: Colors.black, ",
            "shapeBorder: RoundedRectangleBorder( ",
            "side: BorderSide( ",
            "style: BorderStyle.solid, ",
            "color: Colors.black, ",
            "width: 2 ",
            "), ",
            "borderRadius: BorderRadius.circular(10.0)",
            "),",
            "bgColor: Colors.white",
            ");"
        ]
    },
    {
        "id": 20,
        "name": "SnackBar",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart';\nimport 'package:rapid_widgets_library/custom-snackbar.dart';",
        "call": "Builder( builder: (context) => RaisedButton(\n child: Text( 'Show Snackbar', style: TextStyle(fontSize: 18.0), ),\n onPressed: () { customSnackBarWidget(context, Snackbardata, onclickSnackbar); }, )),",
        "definitions": [
            "onclickSnackbar(int nIndex, String sText) { print(nIndex); print(sText); }",
            "SnackBarData Snackbardata = new SnackBarData(",
            " snackBarButtonText: 'Show Snackbar', snackBarLabel: 'Undo', snackBarContent: 'Content',",
            " bgColor: Colors.white, textColor: Colors.black, labelColor: Colors.deepPurple,",
            " duration: 10000, shapeBorder: RoundedRectangleBorder( borderRadius: BorderRadius.circular(5),",
            " side: BorderSide(color: Colors.deepPurple, width: 2)));"
        ]
    },
    {
        "id": 21,
        "name": "Composite Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-compositeCard.dart';",
        "call": "compositeCard(listcards),",
        "definitions": [
            "List<CustomcompositeCardParameters> listcards = []; ",
            "CustomcompositeCardParameters card1 = new CustomcompositeCardParameters(",
            " flexColumn1: {$flexColumn1},",
            " flexColumn2: {$flexColumn2},",
            " cardColor: {$cardColor},",
            " rightHandWidgets: [",
            " Text('{$rightHandText}',style: TextStyle(fontSize: {$rightHandTextSize}),)",
            "], ",
            "leftHandWidgets: [ ",
            "Image.network(\"{$imgLink}\") ",
            "]",
            "); ",
            "listcards.add(card1);"
        ]
    },
    {
        "id": 22,
        "name": "Flip Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-flipcard.dart';",
        "call": "customFlipCardWidget(FlipObj1, onclickFlipCardBtn),",
        "definitions": [
            "onclickFlipCardBtn(int nIndex, String sText) {",
            "print(nIndex);",
            "print(sText);",
            "} ",
            "MaterialCardData FlipObj1 = new MaterialCardData( ",
            "title: \"Colosseum\", ",
            "subtitle: \"The Colosseum in Rome was built in the first century by order of the Emperor Vespasian\", ",
            "containerHeight: 290.0, ",
            "containerWidth: 250.0, ",
            "containerDecoration: BoxDecoration( ",
            "boxShadow: ",
            "[ BoxShadow( ",
            "color: Colors.white, blurRadius: 10, ",
            "offset: Offset.zero) ",
            "], ",
            "borderRadius: BorderRadius.circular(20), ",
            "color: Colors.white, ), ",
            "textStyle1: TextStyle( ",
            "color: Colors.black, ",
            "fontSize: 20, ",
            "fontWeight: FontWeight.bold, ",
            "), ",
            "textStyle2: TextStyle( ",
            "color: Colors.black, ",
            "fontSize: 16.0, ",
            "), ",
            "textStyle3: TextStyle( ",
            "color: Colors.white, ",
            "fontSize: 16.0, ",
            "), ",
            "btnText: \"View\", ",
            "btnTextColor: Colors.black, ",
            "btnColor: Colors.black, ",
            "margin1: 0, ",
            "padding1: 0, ",
            "imgHeight: 170, ",
            "imgWidth: 170, ",
            "imgType: \"Network\", ",
            "imgPath: \"https://cdn.britannica.com/75/75775-050-1FC4B34B/Colosseum-Rome.jpg\"",
            ");"
        ]
    },
    {
        "id": 23,
        "name": "Multiflip Card",
        "imports": "import 'package:rapid_widgets_library/custom-multiflipcard.dart';",
        "call": "CustomFlipCard(data:listofcards, callback:callbackfunc),",
        "definitions": [
            "Widget cardf1 = Container(",
            "decoration: BoxDecoration(color: Colors.black87, borderRadius: BorderRadius.all(Radius.circular(8.0)),), ",
            "child: Column(children: <Widget>[",
            "Expanded(flex:1,child: Center(child: Text('El-Classico', style: TextStyle(color:Colors.white70,fontSize:24,fontWeight: FontWeight.bold),))), ",
            "Expanded(flex: 4, child: Center(child: AspectRatio(aspectRatio: 16/9, child: Container(height: 150, decoration: BoxDecoration(image: DecorationImage(image: NetworkImage('https://images.indianexpress.com/2019/03/messi-ramos-1.jpg',),),),),),),), ",
            "Expanded(flex:1,child:Center(child: Text('12-06-2020 1:30 A.M IST', style: TextStyle(color:Colors.yellow, fontSize:20,fontWeight: FontWeight.bold, fontStyle: FontStyle.italic),))),],),); ",
            "Widget cardf2 = Container(",
            "decoration: BoxDecoration(color: Colors.black87, borderRadius: BorderRadius.all(Radius.circular(8.0)),), ",
            "child: Column(children: <Widget>[",
            "Expanded(flex:5,child: Center(child: Text('Score Board', style: TextStyle(color:Colors.white70,fontSize:24,fontWeight: FontWeight.bold),))), ",
            "Expanded(flex: 20, child: Center(child: Text('FCB 3:1 RM', style: TextStyle(color:Colors.yellow,fontSize:60,fontWeight: FontWeight.bold),))), ",
            "Expanded(flex:3,child:Center(child: Text('Messi : 22', style: TextStyle(color:Colors.white70,fontWeight: FontWeight.bold, fontSize:14, fontStyle: FontStyle.italic),))), ",
            "Expanded(flex:3,child:Center(child: Text('Messi : 45', style: TextStyle(color:Colors.white70,fontWeight: FontWeight.bold, fontSize:14, fontStyle: FontStyle.italic),))), ",
            "Expanded(flex:3,child:Center(child: Text('Suarez : 89', style: TextStyle(color:Colors.white70,fontWeight: FontWeight.bold, fontSize:14, fontStyle: FontStyle.italic),))), ",
            "Expanded(flex:3,child:Center(child: Text('Benzema : 65', style: TextStyle(color:Colors.white70,fontWeight: FontWeight.bold, fontSize:14, fontStyle: FontStyle.italic),))),],),); ",
            "Widget cardf3 = Container(decoration: BoxDecoration(color: Colors.black87, borderRadius: BorderRadius.all(Radius.circular(8.0)),), ",
            "child: Column(children: <Widget>[Expanded(flex:5,child: Center(child: Text('Trivia', style: TextStyle(color:Colors.white70,fontSize:30,fontWeight: FontWeight.bold),))), ",
            "Expanded(flex: 25, child: Padding(padding: const EdgeInsets.all(8.0), child: Center(child: Text('El-Classico is the name given in football to any match between fierce rivals FC Barcelona and Real Madrid. Originally it referred only to those competitions held in the Spanish championship, but nowadays the term has been generalized, and tends to include every single match between the two clubs.', style: TextStyle(color:Colors.yellow,fontSize:18,fontWeight: FontWeight.bold),)),)),],),); ",
            "Widget cardf4 = Container(decoration: BoxDecoration(color: Colors.black87, borderRadius: BorderRadius.all(Radius.circular(8.0)),), ",
            "child: Column(children: <Widget>[ Expanded(flex:5,child: Center(child: Text('Complete Stats.', style: TextStyle(color:Colors.white70,fontSize:24,fontWeight: FontWeight.bold),))), ",
            "Expanded(flex:3,child:Center(child: Text('Total Shots: FCB-22, RM-9', style: TextStyle(color:Colors.yellow,fontWeight: FontWeight.bold, fontSize:16, fontStyle: FontStyle.italic),))), ",
            "Expanded(flex:3,child:Center(child: Text('Possession: FCB-65%, RM-35%', style: TextStyle(color:Colors.yellow,fontWeight: FontWeight.bold, fontSize:16, fontStyle: FontStyle.italic),))), ",
            "Expanded(flex:3,child:Center(child: Text('Fouls: FCB-10, RM-14 : 22', style: TextStyle(color:Colors.yellow,fontWeight: FontWeight.bold, fontSize:16, fontStyle: FontStyle.italic),))), ",
            "Expanded(flex:3,child:Center(child: Text('Passes Completed: FCB-955, RM-423', style: TextStyle(color:Colors.yellow,fontWeight: FontWeight.bold, fontSize:16, fontStyle: FontStyle.italic),))), ",
            "FlatButton(color: Colors.black, shape: new RoundedRectangleBorder(borderRadius: new BorderRadius.circular(30.0)), padding: EdgeInsets.symmetric(vertical: 4.0, horizontal: 40.0),",
            " //adds padding inside the button ",
            "child: Text('View More', style: TextStyle(color: Colors.white, fontSize: 18),), onPressed: () => {},)],),); ",
            "List<Widget> listofcards=[]; ",
            "listofcards.add(cardf1);",
            "listofcards.add(cardf2);",
            "listofcards.add(cardf3);",
            "listofcards.add(cardf4); ",
            "callbackfunc(int nIndex, String sText) {print(nIndex);print(sText);}"
        ]
    },
    {
        "id": 24,
        "name": "Transparent Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-TransparentCard.dart';",
        "call": "imageCardWidget(ImageObj1, onclickImageCardBtn),",
        "definitions": [
            "onclickImageCardBtn(int nIndex, String sText) {",
            "print(nIndex);",
            "print(sText);",
            "} ",
            "MaterialCardData ImageObj1 = new MaterialCardData( ",
            "title: \"Colosseum\", ",
            "subtitle: \"The Colosseum in Rome was built in the first century by order of the Emperor Vespasian\", ",
            "containerHeight: 110.0, ",
            "textStyle1: TextStyle( ",
            "color: Colors.black, ",
            "fontSize: 20, ",
            "fontWeight: FontWeight.bold, ",
            "), ",
            "textStyle2: TextStyle( ",
            "color: Colors.black, ",
            "fontSize: 16.0, ",
            "), ",
            "imgHeight: 250, ",
            "imgWidth: 250, ",
            "imgType: \"Network\", ",
            "imgPath: \"https://cdn.britannica.com/75/75775-050-1FC4B34B/Colosseum-Rome.jpg\");"
        ]
    },
    {
        "id": 25,
        "name": "Split Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/Custom-SplitCard.dart';",
        "call": "fiftyCardWidget(SplitObj1, onclickSplitCardBtn),",
        "definitions": [
            "onclickSplitCardBtn(int nIndex, String sText) {",
            "print(nIndex);",
            "print(sText);",
            "} ",
            "MaterialCardData SplitObj1 = new MaterialCardData( ",
            "title: \"Colosseum\", ",
            "subtitle: \"The Colosseum in Rome was built in the first century by order of the Emperor Vespasian\", ",
            "containerHeight: 330.0, ",
            "containerDecoration: BoxDecoration( ",
            "color: Colors.grey, border: Border.all( color: Colors.black, width: 1.0, ), ",
            "borderRadius: BorderRadius.circular(15), ",
            "), ",
            "textStyle1: TextStyle( color: Colors.black, fontSize: 20, fontWeight: FontWeight.bold, ), ",
            "textStyle2: TextStyle( color: Colors.black, fontSize: 16.0, ), ",
            "imgType: \"Network\", ",
            "imgPath: \"https://cdn.britannica.com/75/75775-050-1FC4B34B/Colosseum-Rome.jpg\"",
            ");"
        ]
    },
    {
        "id": 26,
        "name": "Card with left thumbnail",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-LeftThumbnailCard.dart';",
        "call": "cardWithLeftThumbnail(cards),",
        "definitions": [
            "List<CardWithLeftThumbnailData> cards = []; ",
            "CardWithLeftThumbnailData thumbnailCardData = new CardWithLeftThumbnailData( ",
            "cardBackgroundColor: Colors.orange, ",
            "borderRadius: 6, ",
            "shadow: false, ",
            "shadowColor: Colors.black, ",
            "shadowRadius: 2, ",
            "heading: 'My Open Tasks', ",
            "headingTextColor: Colors.white, ",
            "headingTextSize: 20, ",
            "headingTextFamily: 'Roboto', ",
            "headingTextWeight: FontWeight.normal, ",
            "paddingValue: 20, ",
            "icon: Icon(Icons.list), ",
            "iconColor: Colors.black, ",
            "iconBackgroundColor: Colors.white, ",
            "iconHeight: 20, ",
            "iconWidth: 20, ",
            "thumbnailWidth: 50, ",
            "thumbnailHeight: 50, ",
            "leftBottomWidget: Column( ",
            "crossAxisAlignment: CrossAxisAlignment.end, ",
            "mainAxisAlignment: MainAxisAlignment.spaceBetween, ",
            "children: <Widget>[ ",
            "Text( 'Count of my wins', ",
            "style: TextStyle( color: Colors.white, fontSize: 12, fontFamily: 'Roboto'), ), ",
            "SizedBox( height: 5, ), ",
            "Text( '0', style: TextStyle( color: Colors.white, fontSize: 18, fontFamily: 'Roboto'), ) ",
            "], ",
            "), ",
            "rightBottomWidget: Column( ",
            "crossAxisAlignment: CrossAxisAlignment.end, ",
            "children: <Widget>[ ",
            "Text('Overdue Opps', style: TextStyle( color: Colors.white, fontSize: 12, fontFamily: 'Roboto'), textAlign: TextAlign.right), ",
            "SizedBox( height: 5, ), ",
            "Text('0', style: TextStyle( color: Colors.white, fontSize: 18, fontFamily: 'Roboto', ), ",
            "textAlign: TextAlign.right",
            "), ",
            "], ",
            "), ",
            "rightMiddleWidget: Column( ",
            "crossAxisAlignment: CrossAxisAlignment.end, ",
            "children: <Widget>[ ",
            "Text('At Risk', style: TextStyle( color: Colors.white, fontSize: 12, fontFamily: 'Roboto'), ",
            "textAlign: TextAlign.right), ",
            "SizedBox( height: 5, ), ",
            "Text('0', style: TextStyle( ",
            "color: Colors.white, ",
            "fontSize: 18, ",
            "fontFamily: 'Roboto'), ",
            "textAlign: TextAlign.right), ",
            "], ",
            ")); ",
            "cards.add(thumbnailCardData);"
        ]
    },
    {
        "id": 27,
        "name": "Status Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-StatusCard.dart';",
        "call": "statusCard(statusCardsArray, cardTappedCallback),",
        "definitions": [
            "List<StatusCardData> statusCardsArray = []; ",
            "StatusCardData statusCard1 = new StatusCardData( ",
            "heading: 'Heading', ",
            "subheading: 'Subheading', ",
            "backgroundColor: Colors.orange, ",
            "cardHeight: 300, ",
            "cardWidth: 200, ",
            "headingTextFamily: 'Roboto', ",
            "headingTextSize: 20, ",
            "headingTextColor: Colors.black, ",
            "headingTextWeight: FontWeight.normal, ",
            "subheadingTextFamily: 'Roboto', ",
            "subheadingTextSize: 14, ",
            "subheadingTextColor: Colors.black, ",
            "subheadingTextWeight: FontWeight.bold, ",
            "status: 'New', ",
            "statusTextFamily: 'Roboto', ",
            "statusTextSize: 10, ",
            "statusTextColor: Colors.white, ",
            "statusTextWeight: FontWeight.normal, ",
            "statusBackground: Colors.black, ",
            "cardRadius: 6, ",
            "statusRadius: 30",
            "); ",
            "statusCardsArray.add(statusCard1); ",
            "cardTappedCallback(int index) { ",
            "print(index); ",
            "}"
        ]
    },
    {
        "id": 28,
        "name": "Details Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-DetailsCard.dart';",
        "call": "opportunityDetailsCard(detailsCardData, cardOnTapped),",
        "definitions": [
            "OpportunityDetailsCardData detailsCardData = new OpportunityDetailsCardData( ",
            "height: 250, ",
            "backgroundColor: Colors.red, ",
            "amountTextColor: Colors.red, ",
            "amount: '1000', ",
            "heading: 'Account Name', ",
            "headingValue: 'Main Account', ",
            "subheadingOne: 'Close Date', ",
            "subheadingValueOne: 'Test 1', ",
            "subheadingTwo: 'Type', ",
            "subheadingValueTwo: 'Test 2', ",
            "status: 'Won', ",
            "subheadingIconOne: Icon(Icons.calendar_today), ",
            "subheadingIconTwo: Container(), ",
            "cardWidth: MediaQuery.of(context).size.width); ",
            "cardOnTapped(String heading) { ",
            "print(heading); ",
            "}"
        ]
    },
    {
        "id": 29,
        "name": "Material Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-materialCard.dart';",
        "call": "customMaterialCardWidget(MaterialObj1, onclickMaterialCardBtn),",
        "definitions": [
            "onclickMaterialCardBtn(int nIndex, String sText) {",
            "print(nIndex);",
            "print(sText);",
            "} ",
            "MaterialCardData MaterialObj1 = new MaterialCardData(",
            " title: \"Colosseum\", ",
            "subtitle: \"The Colosseum in Rome was built in the first century by order of the Emperor Vespasian\", ",
            "containerHeight: 400.0, ",
            "containerWidth: 350.0, ",
            "icon: Icon(Icons.room, ",
            "color: Colors.grey, size: 30,), ",
            "containerDecoration: BoxDecoration( ",
            "boxShadow: [ ",
            "BoxShadow( ",
            "color: Colors.white, ",
            "blurRadius: 10, ",
            "offset: Offset.zero",
            ") ",
            "], ",
            "borderRadius: BorderRadius.circular(20), color: Colors.white, ), ",
            "textStyle1: TextStyle( ",
            "color: Colors.black, ",
            "fontSize: 20, ",
            "fontWeight: FontWeight.bold, ",
            "), ",
            "textStyle2: TextStyle( ",
            "color: Colors.black, ",
            "fontSize: 16.0, ",
            "), ",
            "btnText: \"View\", ",
            "btnColor: Colors.black, ",
            "imgType: \"Network\", ",
            "imgPath: \"https://cdn.britannica.com/75/75775-050-1FC4B34B/Colosseum-Rome.jpg\"",
            ");"
        ]
    },
    {
        "id": 30,
        "name": "Anatomy Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-anatomy-card.dart';",
        "call": "customAnatomyCard(reusableCardata, onclickCard),",
        "definitions": [
            "onclickCard(String sText, int nIndex) { ",
            "print(nIndex); ",
            "print(sText); ",
            "} ",
            "final MaterialCardData reusableCardata = new MaterialCardData( ",
            "onRatingUpdate: (double rate) { ",
            "print(rate); ",
            "}, ",
            "btnGrpList1: [ ",
            "SizedBox( ",
            "width: 5, ), ",
            "RaisedButton( ",
            "color: Colors.red, ",
            "child: Text( ",
            "'Click', ",
            "style: TextStyle(",
            "fontSize: 16.0), ",
            "), ",
            "shape: RoundedRectangleBorder( ",
            "borderRadius: BorderRadius.circular(20.0), ",
            "side: BorderSide(color: Colors.red)",
            "), ",
            "onPressed: null, ",
            "), ",
            "SizedBox( ",
            "width: 5, ",
            "), ",
            "RaisedButton( ",
            "color: Colors.red, ",
            "child: Text( 'Click', style: TextStyle(",
            "fontSize: 16.0), ",
            "), ",
            "shape: RoundedRectangleBorder( ",
            "borderRadius: ",
            "BorderRadius.circular(20.0), ",
            "side: BorderSide(color: Colors.red)",
            "), ",
            "onPressed: null, ",
            "), ",
            "RaisedButton( ",
            "color: Colors.red, ",
            "child: Text( 'Click', style: TextStyle(",
            "fontSize: 16.0), ",
            "), ",
            "shape: RoundedRectangleBorder( ",
            "borderRadius: BorderRadius.circular(20.0), ",
            "side: BorderSide(color: Colors.red)",
            "), ",
            "onPressed: null, ",
            "), ",
            "SizedBox( width: 5, ), ",
            "], ",
            "btnGrpList2: [ ",
            "FlatButton( ",
            "child: Text( 'Text', style: TextStyle(",
            "fontSize: 16.0",
            "), ",
            "), ",
            "onPressed: () {}, ",
            "), ",
            "FlatButton( ",
            "child: Text( 'Text', style: TextStyle(",
            "fontSize: 16.0",
            "), ",
            "), ",
            "onPressed: () {}, ",
            "), ",
            "], ",
            "imgType: 'Network', ",
            "imgPath: 'https://lunawood.com/wp-content/uploads/2018/02/placeholder-image.png', ",
            "containerHeight: 670, ",
            "containerWidth: 352, ",
            "imgHeight: 278, ",
            "imgWidth: 300, ",
            "icon: Icon(Icons.local_mall), ",
            "visibilityCardImage: true, ",
            "visibilityCardHeaderTile: true, ",
            "visibilityCardFooter: true, ",
            "visibilityCardActionBar: true, ",
            "visibilityCardData: true, ",
            "bodyText: 't'",
            ");"
        ]
    },
    {
        "id": 31,
        "name": "Feature Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-feature-card.dart';",
        "call": "customFeatureCard(FeatureCardata),",
        "definitions": [
            "final MaterialCardData FeatureCardata = new MaterialCardData( ",
            "btnGrpList1: [ ",
            "SizedBox( width: 150.0, ",
            "height: 35.0, ",
            "child: FlatButton( ",
            "disabledColor: Colors.red, ",
            "child: Text( 'qwe', style: TextStyle(",
            "fontSize: 16.0",
            "), ",
            "overflow: TextOverflow.ellipsis, ",
            "maxLines: 1, ",
            "), ",
            "shape: RoundedRectangleBorder( ",
            "borderRadius: BorderRadius.circular(20.0), ",
            "side: BorderSide(",
            "color: Colors.red",
            ")",
            "), ",
            "onPressed: null, ",
            "), ",
            "), ",
            "SizedBox( ",
            "width: 150.0, ",
            "height: 35.0, ",
            "child: FlatButton( ",
            "disabledColor: Colors.red, ",
            "child: Text( 'Click', ",
            "style: TextStyle(",
            "fontSize: 16.0), ",
            "overflow: TextOverflow.ellipsis, ",
            "maxLines: 1, ",
            "), ",
            "shape: RoundedRectangleBorder( ",
            "borderRadius: BorderRadius.circular(20.0), ",
            "side: BorderSide(",
            "color: Colors.red",
            ")",
            "), ",
            "onPressed: null, ",
            "), ",
            "), ",
            "], ",
            "btnGrpList2: [ ",
            "RaisedButton( ",
            "padding: EdgeInsets.only(left: 40.0, right: 40.0), ",
            "color: Colors.red, ",
            "child: Text( 'Click', style: TextStyle( ",
            "fontSize: 16.0, ",
            "color: Colors.white",
            "), ",
            "), ",
            "onPressed: null, ",
            "shape: RoundedRectangleBorder( ",
            "borderRadius: BorderRadius.circular(20.0), ",
            "), ",
            "), ",
            "], ",
            "iconVisibility: false, ",
            "imgDecoration: BoxDecoration( ",
            "border: Border.all(",
            "color: Colors.green, ",
            "width: 5",
            "), ",
            "color: Colors.red, ",
            "shape: BoxShape.circle, ",
            "), ",
            "textStyle2: TextStyle( ",
            "color: Colors.red, ",
            "fontSize: 20.0, ",
            "), ",
            "title: 'Title Goes Here', ",
            "imgType: 'Network', ",
            "containerWidth: 380, ",
            "imgPath: 'https://lunawood.com/wp-content/uploads/2018/02/placeholder-image.png', ",
            "btnText: 'Done', ",
            "containerHeight: 620, ",
            "bodyText: \"Lorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum siLorem Ipsum si\"",
            ");"
        ]
    },
    {
        "id": 32,
        "name": "Reverse Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-reverse-card.dart';",
        "call": "customReverseMaterialCard(ReverseObj1, reversecallback),",
        "definitions": [
            "reversecallback(int nIndex, String sText1, String sText2, String img) async { ",
            "print(nIndex); ",
            "print(sText1); ",
            "print(sText2); ",
            "} ",
            "MaterialCardData ReverseObj1 = new MaterialCardData( ",
            "title: \"Life Pension Guarentee Plan\", ",
            "subtitle: \"Life Pension Guaranteed Plan is a single premium annuity product which provides a regular guaranteed income for lifetime.\", ",
            "containerHeight: 500.0, ",
            "containerWidth: 320.0, ",
            "containerDecoration: BoxDecoration( boxShadow: [ ",
            "BoxShadow( ",
            "color: Colors.white, ",
            "blurRadius: 10, ",
            "offset: Offset.zero",
            ") ",
            "], ",
            "borderRadius: BorderRadius.circular(20), ",
            "color: Colors.white, ",
            "), ",
            "textStyle1: TextStyle( ",
            "color: Colors.black, ",
            "fontSize: 20, ",
            "fontWeight: FontWeight.bold, ",
            "), ",
            "textStyle2: TextStyle( ",
            "color: Colors.black, ",
            "fontSize: 16.0, ",
            "), ",
            "btnText: \"View\", ",
            "btnTextColor: Colors.black, ",
            "btnColor: Colors.black, ",
            "imgType: \"Network\", ",
            "imgPath: \"https://www.mylabathome.com/wp-content/uploads/2018/05/Indian-family.jpg\");"
        ]
    },
    {
        "id": 33,
        "name": "Item Card",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-itemCard.dart';",
        "call": "CustomItemCard(ItemCardObj),",
        "definitions": [
            "MaterialCardData ItemCardObj = new MaterialCardData( ",
            "imgType: 'Network',imgPath: 'https://images-na.ssl-images-amazon.com/images/I/51oHUvYzbsL._SX327_BO1,204,203,200_.jpg', ",
            "containerHeight: 300, containerWidth: 250, cardbgColor: Colors.grey,footerText :'Review: 4.5/5',",
            "title: 'The Theory of Everything',subtitle: 'Genre: Science, Cosmology.',",
            "bodyText: 'Publication Date 2002',imgHeight:80,imgWidth:100, );"
        ]
    },
    {
        "id": 34,
        "name": "Chip",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-materialChip.dart';",
        "call": "CustomChipWidget( \ndata: chipdata, \ncallback: onclickChip,  \n),",
        "definitions": [
            "MaterialChipData chipdata = new MaterialChipData( ",
            "labelText: 'Books', ",
            "deleteMsg: \"deleted\", ",
            "shapeBorder: RoundedRectangleBorder( ",
            "borderRadius: BorderRadius.circular(5), ",
            "side: BorderSide(",
            "color: Colors.orange, ",
            "width: 2",
            ")",
            "), ",
            "selectedbgColor: Colors.orange, ",
            "labelColor: Colors.white, ",
            "bgColor: Colors.grey, ",
            "checkmarkColor: Colors.orange); ",
            "onclickChip(int nIndex, String sText) { ",
            "print(nIndex); ",
            "print(sText); ",
            "}"
        ]
    },
    {
        "id": 35,
        "name": "CircularProgressIndicator",
        "imports": "import 'package:rapid_widgets_library/custom-circularprogressindicator.dart'; \nimport 'package:rapid_widgets_library/widget-classesUsed.dart';",
        "call": "customisedCircularProgressIndicator(Parameters),",
        "definitions": [
            "CustomCircularProgressIndicatorParameters Parameters = new CustomCircularProgressIndicatorParameters(value: 0, backgroundColor: Colors.red, valueColor: Colors.white);"
        ]
    },
    {
        "id": 36,
        "name": "DataTable",
        "imports": "import 'package:rapid_widgets_library/custom-datatable.dart'; \nimport 'package:rapid_widgets_library/widget-classesUsed.dart';",
        "call": "customisedDataTable(dt),",
        "definitions": [
            "RowColumn row1=new RowColumn([\"Ganguly\", \"38\", \"Cricketer\"]); ",
            "RowColumn row2=new RowColumn([\"Messi\", \"32\", \"Footballer\"]); ",
            "List<RowColumn> rows=[]; ",
            "rows.add(row1); ",
            "rows.add(row2); ",
            "RowColumn column = new RowColumn([\"name\", \"age\", \"Work\"]); ",
            "DataTableSchema dt=new DataTableSchema(",
            "columns:column,rows:rows, ",
            "backgroundColour:Colors.white,",
            "rowtextColour: Colors.black, ",
            "rowtextSize: 12.0, ",
            "columntextColour: Colors.blueAccent,",
            "columntextSize: 14.0",
            ");"
        ]
    },
    {
        "id": 37,
        "name": "Paginated DataTable",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-paginated-table.dart';",
        "call": "Container( child: CustompaginatedDataTable( data: data, )),",
        "definitions": [
            "class TableRowdata{ ",
            "final sno; final requirements; ",
            "Widget proof; ",
            "TableRowdata({@required this.sno,@required this.requirements,@required this.proof}); }",
            "List<TableRowdata> newDataList = [ ",
            "TableRowdata( sno: '1', requirements: 'GST Form', proof: Text('Text1')), ",
            "TableRowdata( sno: '2', requirements: 'TIN Details', proof: Text('Text2')), ",
            "TableRowdata( sno: '3', requirements: 'Signature', proof: Text('Text3')), ",
            "TableRowdata( sno: '4', requirements: 'Bank Statement', proof: Text('Text4')), ];",
            "class DTS extends DataTableSource { ",
            "@override ",
            "DataRow getRow(int index) { ",
            "final Userr = newDataList[index]; ",
            "print(Userr); ",
            "return DataRow( selected: true, cells: newDataList.length > 0 ? [ DataCell(Text((index + 1).toString())), ",
            "DataCell(Text(Userr.requirements)), DataCell(Userr.proof), ]:[ DataCell(Text( 'No Records Found !', style: TextStyle(color: Colors.black,fontSize: 25), )), ",
            "DataCell(Text('')) ]); }",
            "@override // TODO: implement isRowCountApproximate ",
            "bool get isRowCountApproximate => false; ",
            "@override // TODO: implement rowCount ",
            "int get rowCount => newDataList.length; ",
            "@override // TODO: implement selectedRowCount ",
            "int get selectedRowCount => 0; } ",
            "final PaginatedDataTableData data = new PaginatedDataTableData( ",
            "tableData: DTS(), headerText: null, ",
            "sortAscending: null, sortColumnIndex: null, rowsPerPage: 2, ",
            "columns: <DataColumn>[ ",
            "DataColumn( label: Text('S.No', textAlign: TextAlign.center, ",
            "style: new TextStyle(fontSize: 18.0)), ), DataColumn( ",
            "label: Text('Docs', textAlign: TextAlign.center, style: new TextStyle(fontSize: 18.0)), ), ",
            "DataColumn( label: Text('Status', textAlign: TextAlign.center, style: new TextStyle(fontSize: 18.0)), ), ], ",
            "theme: ThemeData( dividerColor: Colors.indigo, cardColor: Colors.white, ",
            "applyElevationOverlayColor: true, iconTheme: IconThemeData( color: Colors.pink, opacity: 10), ));"
        ]
    },
    {
        "id": 38,
        "name": "GridView",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-grid.dart'; \nimport 'package:rapid_widgets_library/custom-icon.dart';",
        "call": "Center(child: customisedGridView(AreaList, gridobj)),",
        "definitions": [
            "NetworkImage imageobj= new NetworkImage(\"http://images.unsplash.com/photo-1499084732479-de2c02d45fcc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=889&q=80\"); ",
            "Area Obj1 = new Area(\"Image Title\", Image(image: imageobj),\"The beautiful night\"); ",
            "IconState icon1 =new IconState(); ",
            "Area Obj2 = new Area(\"Icon Title\", customisedIcon(icon1), \"Blue Umbrella Icon\"); ",
            "List<Area> AreaList=[]; ",
            "AreaList.add(Obj1); ",
            "AreaList.add(Obj2); ",
            "onclickGrid(int nIndex, String sText) { ",
            "print(nIndex); ",
            "print(sText); ",
            "} ",
            "onLongPressGrid(int nIndex, String Text1, String Text2) { ",
            "print(nIndex); ",
            "print(Text1); ",
            "print(Text2); ",
            "} ",
            "Grid gridobj=new Grid(count:2,callback:onclickGrid,longcallback:onLongPressGrid,crossaxisspacing:16.0,mainaxisspacing:16.0, cardColour:Colors.white, textColour:Colors.black);"
        ]
    },
    {
        "id": 39,
        "name": "Custom Card GridView",
        "imports": "import 'package:rapid_widgets_library/customcard-grid.dart'; \nimport 'package:rapid_widgets_library/widget-classesUsed.dart';",
        "call": "customisedGridView(AreaListCard, gridobj2Card),",
        "definitions": [
            "final MaterialCardData MaterialCardata2 = new MaterialCardData( ",
            "title: 'Taj Mahal', ",
            "subtitle: 'This mausoleum complex in Agra, India, is regarded as one of the world�s most iconic monuments and is perhaps the finest example of Mughal architecture', ",
            "imgPath: \"https://cdn.britannica.com/86/170586-050-AB7FEFAE/Taj-Mahal-Agra-India.jpg\" ",
            "); ",
            "final MaterialCardData MaterialCardata3 = new MaterialCardData( ",
            "title: 'Colosseum', ",
            "subtitle: 'The Colosseum in Rome was built in the first century by order of the Emperor Vespasian', ",
            "imgPath: \"https://cdn.britannica.com/75/75775-050-1FC4B34B/Colosseum-Rome.jpg\" ",
            "); ",
            "final MaterialCardData MaterialCardata4 = new MaterialCardData( ",
            "title: 'Petra', ",
            "subtitle: 'The ancient city of Petra, Jordan, is located in a remote valley, nestled among sandstone mountains and cliffs', ",
            "imgPath: \"https://cdn.britannica.com/88/189788-050-9B5DB3A4/Al-Dayr-Petra-Jordan.jpg\" ",
            "); ",
            "onclickGrid(int nIndex, String sText) { ",
            "print(nIndex); ",
            "print(sText); ",
            "} ",
            "onLongPressGrid(int nIndex, String Text1, String Text2) { ",
            "print(nIndex); ",
            "print(Text1); ",
            "print(Text2); ",
            "} ",
            "List<MaterialCardData> AreaListCard = []; ",
            "AreaListCard.add(MaterialCardata2); ",
            "AreaListCard.add(MaterialCardata3); ",
            "AreaListCard.add(MaterialCardata4); ",
            "CustomGrid gridobjCard = new CustomGrid(1,onclickGrid, onLongPressGrid,16.0, 16.0,\"fiftycard\",);",
            " customisedGridView(AreaList, gridobj); ",
            "CustomGrid gridobj2Card = new CustomGrid(1,onclickGrid, onLongPressGrid,16.0, 16.0,\"flipcard\",);"
        ]
    },
    {
        "id": 40,
        "name": "Icon",
        "imports": "import 'package:rapid_widgets_library/custom-icon.dart'; \nimport 'package:rapid_widgets_library/widget-classesUsed.dart';",
        "call": "customisedIcon(icon),",
        "definitions": [
            "IconState icon =new IconState(icon: Icons.home,color: Colors.red,size: 18.0);"
        ]
    },
    {
        "id": 41,
        "name": "Image",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart';\n import 'package:rapid_widgets_library/custom-image.dart';",
        "call": "CustomImage(data: ImageObj1),",
        "definitions": [
            "onclick(String sText) { print(sText); }",
            "CustomImageContents ImageObj1 = new CustomImageContents(",
            "src:'http://miro.medium.com/max/3840/1*88vrIIpPfApKYwQeWw32xg.png',",
            " semanticLabel: 'Random Network', imageType: 'Network', height: 200, width: 200);",
            " CustomImageContents ImageObj2 = new CustomImageContents(",
            "src:'images/rest1.jpeg', semanticLabel: 'Asset Restaurant',",
            " imageType: 'Asset', height: 200, width: 800, filterQuality: FilterQuality.high );"
        ]
    },
    {
        "id": 42,
        "name": "LinearProgressIndicator",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-linearProgressIndicator.dart';",
        "call": "customLinearProgressBarIndicator(linearBarParameters),",
        "definitions": [
            "CustomLinearProgressBarParameters linearBarParameters = new CustomLinearProgressBarParameters( ",
            "value: 0, backgroundColor: Colors.red, valueColor: AlwaysStoppedAnimation<Color>(Colors.white)); "
        ]
    },
    {
        "id": 43,
        "name": "ToolTip",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-toolTip.dart';",
        "call": "customToolTip(toolTipParams, tooltipCallback),",
        "definitions": [
            "tooltipCallback(bool active) { print('Button was pressed'); }",
            "CustomToolTipparams toolTipParams = new CustomToolTipparams( message: 'Tooltip Message', padding: EdgeInsets.all(10), margin: EdgeInsets.all(5), child: RaisedButton( onPressed: () {}, child: Text('Button'), ), decoration: BoxDecoration( color: Colors.red, borderRadius: BorderRadius.circular(10)));"
        ]
    },
    {
        "id": 44,
        "name": "Divider",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart';\n import 'package:rapid_widgets_library/custom-divider.dart';",
        "call": "customDivider(dividerParameters),",
        "definitions": [
            "CustomDividerParameters dividerParameters = new CustomDividerParameters(",
            " height: 1, thickness: 2, indent: 1, endIndent: 1, color: Colors.red);"
        ]
    },
    {
        "id": 45,
        "name": "ListTile",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart';\n import 'package:rapid_widgets_library/custom-listTile.dart';",
        "call": "customListTileGeneric(listDataGen, tileParametersGen, onListTappedGen),",
        "definitions": [
            "List<TileData> listDataGen = [ ",
            "TileData( leading: Icon(Icons.search), title: 'Search', subtitle: 'Search Bar', enabled: true, selected: true),",
            " TileData( leading: Icon(Icons.home), title: 'Home', subtitle: 'Home Button', enabled: true, selected: false),",
            " TileData( leading: Icon(Icons.alarm), title: 'Clock', subtitle: 'Set Alarms', enabled: true, selected: false) ];",
            "ListTileParameters tileParametersGen = new ListTileParameters(dense: true, isThreeLine: true);",
            "onListTappedGen(int index, String title) { print(index); print(title); };"
        ]
    },
    {
        "id": 46,
        "name": "Custom ListTile",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-listTileWithImage.dart';",
        "call": "customListTile(listData, tileParameters, onListTapped),",
        "definitions": [
            "List<CustomTileData> listData = [ ",
            "CustomTileData( ",
            "leading: Icon(Icons.search), ",
            "title: 'Search', ",
            "subtitle: 'Search Bar', ",
            "trailingTopText: 'Search here', ",
            "trailingBottomText: 'Search Widget', ",
            "enabled: true, ",
            "selected: true",
            "), ",
            "CustomTileData( ",
            "leading: Icon(Icons.home), ",
            "title: 'Home', ",
            "subtitle: 'Home Button', ",
            "trailingTopText: 'Home', ",
            "trailingBottomText: 'Home Widget', ",
            "enabled: true, ",
            "selected: false",
            "), ",
            "CustomTileData( ",
            "leading: Icon(Icons.alarm), ",
            "title: 'Clock', ",
            "subtitle: 'Set Alarms', ",
            "trailingTopText: 'Alarms', ",
            "trailingBottomText: 'Clock Widget', ",
            "enabled: true, ",
            "selected: false",
            ") ",
            "]; ",
            "CustomListTileParameters tileParameters = new CustomListTileParameters( ",
            "dense: true, ",
            "isThreeLine: true, ",
            "fontWeight: FontWeight.bold, ",
            "fontSize: 14",
            "); ",
            "onListTapped(int index, String title) { ",
            "print(index); ",
            "print(title); ",
            "}"
        ]
    },
    {
        "id": 47,
        "name": "Stepper",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-stepper.dart';",
        "call": "CustomStepper(steps, stepperParams, null, null, null, onStepperComplete),",
        "definitions": [
            "List<CustomSteps> steps = [",
            " CustomSteps( title: Text('First Name'), subtitle: Text('Please enter your first name'), content: TextField(), isActive: true),",
            " CustomSteps( title: Text('Last Name'), subtitle: Text('Please enter your last name'), content: TextField(), isActive: true) ];",
            "StepperParameters stepperParams = new StepperParameters(type: StepperType.vertical);",
            "onStepperComplete() { print('Complete'); }"
        ]
    },
    {
        "id": 48,
        "name": "Finger Print Scanner",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-fingerprint.dart';",
        "call": "CustomFingerprint(authCallback: onAuthenticated, param: params,),",
        "definitions": [
            "onAuthenticated(bool sBool) { if (sBool) { print(sBool); } }",
            "CustomFingerprintParameters params = new CustomFingerprintParameters( ",
            "backgroundColor: Colors.blueGrey, ",
            "textColor: Colors.redAccent , ",
            "authText: \"Fingerprint Authentication\", ",
            "tapWidget: Icon(Icons.fingerprint, size: 60,),",
            "textSize: 32",
            ");"
        ]
    },
    {
        "id": 49,
        "name": "QR and Barcode Scanner",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-scanner.dart';",
        "call": "CustomQRCodeScanner(buttonParameters, getScannedData),",
        "definitions": [
            "Floatingactionbuttonparam buttonParameters = new Floatingactionbuttonparam( ",
            "backgroundColor: Colors.red, ",
            "child: Text('Scan'), ",
            "heroTag: 'scanner'); ",
            "getScannedData(String data) { print(data); }"
        ]
    },
    {
        "id": 50,
        "name": "Bar Chart",
        "imports": "import 'package:charts_flutter/flutter.dart' as charts; \nimport 'package:rapid_widgets_library/custom-barChart.dart'; \nimport 'package:rapid_widgets_library/widget-classesUsed.dart';",
        "call": "objBarOne,",
        "definitions": [
            "List<GrantsData> barGraphData = [ ",
            "new GrantsData('Jan', 5,Colors.grey), ",
            "new GrantsData('Feb', 2, Colors.orange), ",
            "new GrantsData('Mar', 1, Colors.black), ",
            "new GrantsData('Apr', 4, Colors.red), ];",
            "List<charts.Series<GrantsData, String>> barSeries = [ ",
            "new charts.Series<GrantsData, String>( ",
            "id: 'Sales',",
            "domainFn: (GrantsData sales, _) => sales.year, ",
            "measureFn: (GrantsData sales, _) => sales.grants, ",
            "colorFn: (GrantsData sales, _) => charts.ColorUtil.fromDartColor(sales.mColor), ",
            "labelAccessorFn: (GrantsData row, _) => '${row.grants}', ",
            "data: barGraphData, ) ];",
            "ChartsBar objBarOne = new ChartsBar(barSeries);"
        ]
    },
    {
        "id": 51,
        "name": "Pie Chart",
        "imports": "import 'package:rapid_widgets_library/custom-pieChart.dart'; \nimport 'package:charts_flutter/flutter.dart' as charts; \nimport 'package:rapid_widgets_library/widget-classesUsed.dart';",
        "call": "objPieOne,",
        "definitions": [
            "List<ServicesData> pieChartData = [ ",
            "new ServicesData('Active', 30, Colors.orange), ",
            "new ServicesData('Pending', 10, Colors.black), ",
            "new ServicesData('Completed', 40, Colors.red), ",
            "new ServicesData('Requested', 20, Colors.grey), ];",
            "List<charts.Series<ServicesData, String>> pieSeries = [ ",
            "new charts.Series<ServicesData, String>( ",
            "id: 'Sales',",
            "domainFn: (ServicesData sales, _) => sales.serviceType, ",
            "measureFn: (ServicesData sales, _) => sales.serviceNumber, ",
            "colorFn: (ServicesData sales, _) => charts.ColorUtil.fromDartColor(sales.mColor), ",
            "labelAccessorFn: (ServicesData row, _) => '${row.serviceNumber}', ",
            "data: pieChartData, ) ]; ",
            "ChartsPie objPieOne = new ChartsPie(pieSeries, 50);"
        ]
    },
    {
        "id": 52,
        "name": "Line Chart",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:charts_flutter/flutter.dart' as charts; \nimport 'package:rapid_widgets_library/custom-lineChart.dart';",
        "call": "objLineChart,",
        "definitions": [
            "List<LinearSales> objLineOne = [ new LinearSales(0, 5), new LinearSales(20, 25), new LinearSales(30, 50), new LinearSales(40, 60), ]; ",
            "List<LinearSales> objLineTwo = [ new LinearSales(0, 15), new LinearSales(20, 35), new LinearSales(30, 60), new LinearSales(40, 80), ]; ",
            "List<LinearSales> objLineThree = [ new LinearSales(0, 16), new LinearSales(20, 36), new LinearSales(30, 10), new LinearSales(40, 20), ]; ",
            "List<charts.Series<LinearSales, int>> objSeries  = [ ",
            "new charts.Series<LinearSales, int>( id: 'SomeId', colorFn: (_, __) => charts.MaterialPalette.red.shadeDefault, domainFn: (LinearSales sales, _) => sales.year, measureFn: (LinearSales sales, _) => sales.sales, data: objLineOne, ), ",
            "new charts.Series<LinearSales, int>( id: 'SomeId', colorFn: (_, __) => charts.MaterialPalette.black, domainFn: (LinearSales sales, _) => sales.year, measureFn: (LinearSales sales, _) => sales.sales, data: objLineTwo, ), ",
            "new charts.Series<LinearSales, int>( id: 'SomeId', colorFn: (_, __) => charts.MaterialPalette.deepOrange.shadeDefault, domainFn: (LinearSales sales, _) => sales.year, measureFn: (LinearSales sales, _) => sales.sales, data: objLineThree, ) ",
            "]; ",
            "ChartsLine objLineChart = new ChartsLine(objSeries);"
        ]
    },
    {
        "id": 53,
        "name": "Scatter Chart",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-scatterChart.dart'; \nimport 'package:charts_flutter/flutter.dart' as charts;",
        "call": "objScatterChart,",
        "definitions": [
            "List<ScatterChartClass> lBlockchain = [new ScatterChartClass('Blockchain', 52, 0.75, 14.0,Colors.grey),]; ",
            "List<ScatterChartClass> lCloud = [new ScatterChartClass('Cloud', 45, 0.6, 18.0, Colors.orange),]; ",
            "List<ScatterChartClass> lFlutter = [new ScatterChartClass('Flutter',60, 0.78, 17.0, Colors.blue)]; ",
            "List<ScatterChartClass> lMulesoft = [new ScatterChartClass('Mulesoft',25, 0.6, 13.0,  Colors.black),]; ",
            "List<ScatterChartClass> lSalesforce = [new ScatterChartClass('Salesforce',34, 0.5, 15.0, Colors.red),];",
            "List<charts.Series<ScatterChartClass, int>> seriesList = [ ",
            "new charts.Series<ScatterChartClass, int>( ",
            "id:  lBlockchain[0].datalabel, ",
            "colorFn: (ScatterChartClass sales, _) => charts.ColorUtil.fromDartColor(sales.color), ",
            "domainFn: (ScatterChartClass sales, _) => sales.xValue, ",
            "measureFn: (ScatterChartClass sales, _) => sales.yPercentage, ",
            "radiusPxFn: (ScatterChartClass sales, _) => sales.radius, ",
            "data: lBlockchain), ",
            "new charts.Series<ScatterChartClass, int>( ",
            "id: lCloud[0].datalabel, ",
            "colorFn: (ScatterChartClass sales, _) => charts.ColorUtil.fromDartColor(sales.color), ",
            "domainFn: (ScatterChartClass sales, _) => sales.xValue, ",
            "measureFn: (ScatterChartClass sales, _) => sales.yPercentage, ",
            "radiusPxFn: (ScatterChartClass sales, _) => sales.radius, ",
            "data: lCloud), ",
            "new charts.Series<ScatterChartClass, int>( ",
            "id: lFlutter[0].datalabel, ",
            "colorFn: (ScatterChartClass sales, _) => charts.ColorUtil.fromDartColor(sales.color), ",
            "domainFn: (ScatterChartClass sales, _) => sales.xValue, ",
            "measureFn: (ScatterChartClass sales, _) => sales.yPercentage, ",
            "radiusPxFn: (ScatterChartClass sales, _) => sales.radius, ",
            "data: lFlutter), ",
            "new charts.Series<ScatterChartClass, int>( ",
            "id: lMulesoft[0].datalabel, ",
            "colorFn: (ScatterChartClass sales, _) => charts.ColorUtil.fromDartColor(sales.color), ",
            "domainFn: (ScatterChartClass sales, _) => sales.xValue, ",
            "measureFn: (ScatterChartClass sales, _) => sales.yPercentage, ",
            "radiusPxFn: (ScatterChartClass sales, _) => sales.radius, ",
            "data: lMulesoft), ",
            "new charts.Series<ScatterChartClass, int>( ",
            "id: lSalesforce[0].datalabel, ",
            "colorFn: (ScatterChartClass sales, _) => charts.ColorUtil.fromDartColor(sales.color), ",
            "domainFn: (ScatterChartClass sales, _) => sales.xValue, ",
            "measureFn: (ScatterChartClass sales, _) => sales.yPercentage , ",
            "radiusPxFn: (ScatterChartClass sales, _) => sales.radius, ",
            "data: lSalesforce), ]; ",
            "ChartsScatter objScatterChart = new ChartsScatter(seriesList);"
        ]
    },
    {
        "id": 54,
        "name": "Date Picker",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart';\n import 'package:rapid_widgets_library/custom-datePicker.dart'; \nimport 'package:rapid_widgets_library/custom-flatButton.dart';",
        "call": "customFlatButton(datepickerButton, onPressDatePickerButton, null),",
        "definitions": [
            "DatePickerParameters datePickerObject = new DatePickerParameters( ",
            "startMonth: 2, startYear: 2002, endMonth: 12, endYear: 2060, headerColor: Colors.pink, onBodyColor: Colors.black, ",
            "bodybgColor: Colors.white, hintText: 'Select a date', confirmText: 'Select', cancelText: 'Cancel', ",
            "dayTextStyle: TextStyle(fontWeight: FontWeight.bold, fontSize: 15), monthTextStyle: TextStyle(fontWeight: FontWeight.bold, fontSize: 20), selectedDateStyle: TextStyle(fontWeight: FontWeight.bold, fontSize: 30), ",
            "hintTextStyle: TextStyle(fontWeight: FontWeight.bold, fontSize: 15)); ",
            "onDateSelect(DateTime t) { print(t); }",
            "FlatButtonParameters datepickerButton = new FlatButtonParameters(",
            "child: Text('Choose date',style: TextStyle(color: Colors.white),),",
            "color: Colors.pink,height: 30); ",
            "onPressDatePickerButton(bool b){ ",
            "customDatePicker(datePickerObject, context, onDateSelect); ",
            "}"
        ]
    },
    {
        "id": 55,
        "name": "Time Picker",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart';\n import 'package:rapid_widgets_library/custom-timePicker.dart'; \nimport 'package:rapid_widgets_library/custom-flatButton.dart';",
        "call": "customFlatButton(timePickerButton, onPressTimePickerButton, null),",
        "definitions": [
            "TimePickerParameters timePickerObj = new TimePickerParameters( bodybgColor: Colors.grey, ",
            "selectColor: Colors.black, headerColor: Colors.black, timeColor: Colors.black,",
            " buttonText:Colors.black, );",
            "onclicktimePicker(TimeOfDay t) { print(t); }",
            "FlatButtonParameters timePickerButton = new FlatButtonParameters(",
            "child: Text('Select Time',style: TextStyle(color: Colors.white),),color: Colors.pink,height: 30); ",
            "onPressTimePickerButton(bool b){ ",
            "customTimePicker(timePickerObj, context, onclicktimePicker); }"
        ]
    },
    {
        "id": 56,
        "name": "File Picker",
        "imports": "import 'package:rapid_widgets_library/custom-filepicker.dart';",
        "call": "Center(child: fileobj),",
        "definitions": [
            "CustomFilePicker fileobj = new CustomFilePicker( ",
            "multiPick: true, ",
            "title: \"Select\", ",
            "color: Colors.red, ",
            "textColor: Colors.white, ",
            "buttonRadius:20.0",
            ");"
        ]
    },
    {
        "id": 57,
        "name": "Canvas",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-canvas-new.dart';",
        "call": "Center(child: CustomSignatureNew(painterParameters,dropParam)),",
        "definitions": [
            "CustomPainterParameters painterParameters = new CustomPainterParameters(); ",
            "CustomCanvasOptionsParameters dropParam = new CustomCanvasOptionsParameters(",
            "widthThickness: 110, ",
            "widthColor: 110, ",
            "bgColorColour: Colors.grey, ",
            "bgColorThickness: Colors.grey, ",
            "textColorColour: Colors.black, ",
            "textColorThickness: Colors.black, ",
            ");"
        ]
    },
    {
        "id": 58,
        "name": "Video Player",
        "imports": "import 'package:rapid_widgets_library/custom-videoplayer.dart';",
        "call": "Center(child: video),",
        "definitions": [
            "CustomVideoPlayer video = new CustomVideoPlayer( ",
            "videolink: 'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4', ",
            "backgroundColor: Colors.grey, ",
            "aspectRatio: 4/3, ",
            "type: 'network', ",
            "looping: true, ",
            "autoPlay: false, ",
            "showControls: true, ",
            "bufferedColor: Colors.grey, ",
            "playedColor: Colors.red, ",
            "handleColor: Colors.red, ",
            ");"
        ]
    },
    {
        "id": 59,
        "name": "Camera",
        "imports": "import 'package:rapid_widgets_library/custom-camera.dart';",
        "call": "ImageInput(onSelectImage:callback, height:150, width:100, buttonColour: Colors.red, borderColour: Colors.black),",
        "definitions": [
            "callback(){}"
        ]
    },
    {
        "id": 60,
        "name": "Carousel",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-carousel.dart';",
        "call": "CustomCarousel(CarouselWidgetList,obj,onclickCarousel),",
        "definitions": [
            "CarouselList carouselObj1 = new CarouselList( widget: Icon(Icons.person,size: 50,) ); ",
            "CarouselList carouselObj2 = new CarouselList( widget: Icon(Icons.cloud,size: 50,) ); ",
            "CarouselList carouselObj3 = new CarouselList( widget: Container(color:Colors.blue,height:100,width:80) ); ",
            "CarouselList carouselObj4 = new CarouselList( widget: Container(color:Colors.red,height:50,width:50) ); ",
            "CarouselList carouselObj5 = new CarouselList( widget: Container(color:Colors.yellow,height:100,width:80) ); ",
            "CarouselList carouselObj6 = new CarouselList( widget: Container(color:Colors.purple,height:100,width:80) ); ",
            "CarouselList carouselObj7 = new CarouselList( widget: Container(color:Colors.green,height:50,width:50) ); ",
            "List<CarouselList> CarouselWidgetList = [carouselObj1,carouselObj2,carouselObj3,carouselObj4,carouselObj5,carouselObj6,carouselObj7]; ",
            "onclickCarousel(int nIndex,) { print(nIndex); } CarouselParameters obj = new CarouselParameters(height: 500,childAspectRatio:2.75,width:400);"
        ]
    },
    {
        "id": 61,
        "name": "Composite Landing Page",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-compositeLandingPage.dart';",
        "call": "AppBarWithTabsAndDrawer(appBarParams, appBarIcons, \ntabs, userInfo, drawerList, onclickLeftNav),",
        "definitions": [
            "onclickLeftNav(int nIndex) { print(nIndex); } ",
            "List<TabBarProducts> tabs = []; ",
            "TabBarProducts tab1 = new TabBarProducts( ",
            "'Tab1', Icon(Icons.settings), Container(child: Text('TabView 1'))",
            "); ",
            "TabBarProducts tab2 = new TabBarProducts( ",
            "'Tab2', Icon(Icons.home), Container(child: Text('TabView 2'))",
            "); ",
            "tabs.add(tab1); ",
            "tabs.add(tab2); ",
            "List<DrawerListItems> drawerList = [ ",
            "DrawerListItems(",
            "Icon(Icons.settings), Text('Tab1')), DrawerListItems(Icon(Icons.home), Text('Tab2')",
            "), ",
            "]; ",
            "DrawerHeaderParameters userInfo = new DrawerHeaderParameters( ",
            "title: 'User Name', subtitle: 'User Designation', ",
            "); ",
            "AppBarParameters appBarParams = new AppBarParameters( ",
            "backgroundColor: Colors.red, elevation: 5, bottomOpacity: 1.0, ",
            "toolbarOpacity: 1.0, titleSpacing: 1.0, centerTitle: false, ",
            "title: Text('Test')); List<Widget> appBarIcons = [ ",
            "IconButton( icon: Icon(Icons.list), tooltip: 'Opens Drawer', onPressed: () {}, ), ",
            "IconButton( icon: Icon(Icons.alarm_add), ",
            "tooltip: 'Opens Clock', onPressed: () {}, ",
            ") ",
            "];"
        ]
    },
    {
        "id": 62,
        "name": "Search Bar",
        "imports": "import 'package:rapid_widgets_library/widget-classesUsed.dart'; \nimport 'package:rapid_widgets_library/custom-searchWidget.dart';",
        "call": "CustomSearchBar(appBarParams, listTileParameters, appBarIcons, onClickCallback, textFieldParams),",
        "definitions": [
            "CustomListTileParameters listTileParameters = new CustomListTileParameters(",
            " fontFamily: 'Roboto',",
            " listBgColor: Colors.white,",
            " textColor: Colors.black,",
            " contentPadding: EdgeInsets.only(top: 20, bottom: 20)); ",
            "AppBarParameters appBarParams = new AppBarParameters(",
            " backgroundColor: Colors.red,",
            " elevation: 5,",
            " bottomOpacity: 2.0,",
            " toolbarOpacity: 1.0,",
            " titleSpacing: 1.0,",
            " centerTitle: false,",
            " title: Text(\"Search Bar\")",
            "); ",
            "List<Widget> appBarIcons = [",
            " IconButton( icon: Icon(Icons.arrow_back), ), ",
            "]; ",
            "onClickCallback(int nIndex, String title) { ",
            "print(nIndex); ",
            "print(title); ",
            "} ",
            "TextFieldParameters textFieldParams = new TextFieldParameters(",
            " maxLength: 20,",
            " obsecureText: false,",
            " maxLengthEnforced: false,",
            " cursorColor: Colors.black,",
            " cursorRadius: Radius.circular(50),",
            " style: TextStyle( fontFamily: 'Roboto', color: Colors.black),",
            " decoration: InputDecoration(",
            " counterText: '',",
            " prefixIcon: Icon(",
            " Icons.search,",
            " color: Colors.black,",
            " ),",
            " filled: true,",
            " fillColor: Colors.white,",
            " hintText: 'Search for partners',",
            " hintStyle: TextStyle(color: Colors.black),",
            " focusColor: Colors.black,",
            " )",
            ");"
        ]
    },
    {
        "id": 63,
        "name": "Boilerplate 1",
        "imports": "//To navigate from one page to another. Must be called on the onPressed function. \nNavigator.pushReplacement(\n context, MaterialPageRoute(builder: (context) => //add class name of page \n));",
        "call": "",
        "definitions": [
            "//to go back to previous page. Must be called on the onPressed function ",
            "Navigator.pop(context);"
        ]
    },
    {
        "id": 64,
        "name": "Boilerplate 2",
        "imports": "//To navigate from one page to another. Must be called on the onPressed function. \nNavigator.pushReplacement(\n context, MaterialPageRoute(builder: (context) => //add class name of page \n));",
        "call": "",
        "definitions": [
            "//to go back to previous page. Must be called on the onPressed function of a button. ",
            "Navigator.pop(context);"
        ]
    },
    {
        "id": 65,
        "name": "Boilerplate 3",
        "imports": "//To navigate from one page to another. Must be called on the onPressed function. \nNavigator.pushReplacement(\n context, MaterialPageRoute(builder: (context) => //add class name of page \n));",
        "call": "",
        "definitions": [
            "//to go back to previous page. Must be called on the onPressed function of a button. ",
            "Navigator.pop(context);"
        ]
    },
    {
        "id": 66,
        "name": "Boilerplate 4",
        "imports": "//To navigate from one page to another. Must be called on the onPressed function. \nNavigator.pushReplacement(\n context, MaterialPageRoute(builder: (context) => //add class name of page \n));",
        "call": "",
        "definitions": [
            "//to go back to previous page. Must be called on the onPressed function of a button. ",
            "Navigator.pop(context);"
        ]
    },
    {
        "id": 67,
        "name": "Boilerplate 5",
        "imports": "//To navigate from one page to another. Must be called on the onPressed function. \nNavigator.pushReplacement(\n context, MaterialPageRoute(builder: (context) => //add class name of page \n));",
        "call": "",
        "definitions": [
            "//to go back to previous page. Must be called on the onPressed function of a button. ",
            "Navigator.pop(context);"
        ]
    },
    {
        "id": 68,
        "name": "Boilerplate 6",
        "imports": "//To navigate from one page to another. Must be called on the onPressed function. \nNavigator.pushReplacement(\n context, MaterialPageRoute(builder: (context) => //add class name of page \n));",
        "call": "",
        "definitions": [
            "//to go back to previous page. Must be called on the onPressed function of a button. ",
            "Navigator.pop(context);"
        ]
    },
    {
        "id": 69,
        "name": "Boilerplate 7",
        "imports": "//To navigate from one page to another. Must be called on the onPressed function. \nNavigator.pushReplacement(\n context, MaterialPageRoute(builder: (context) => //add class name of page \n));",
        "call": "",
        "definitions": [
            "//to go back to previous page. Must be called on the onPressed function of a button. ",
            "Navigator.pop(context);"
        ]
    },
    {
        "id": 70,
        "name": "Login Template",
        "imports": "//To navigate from one page to another. Must be called on the onPressed function. \nNavigator.pushReplacement(\n context, MaterialPageRoute(builder: (context) => //add class name of page \n));",
        "call": "",
        "definitions": [
            "//to go back to previous page. Must be called on the onPressed function of a button. ",
            "Navigator.pop(context);"
        ]
    }
]